PARSER-01 = Unknown fatal parser error: \"{0}\".
PARSER-02 = Unexpected End-Of-File (token exhaustion).
PARSER-03 = Expected token {0}; found {1}.
PARSER-04 = Bad version value.
PARSER-05 = Bad hex character: {0}.
PARSER-06 = Unsupported custom literal type: \"{0}\".
PARSER-07 = Cannot have module or package in a method.
PARSER-08 = Multiple assignment list required.
PARSER-09 = Empty statement is illegal.
PARSER-10 = Illegal assert designation: \"{0}\".
PARSER-11 = Conditional not allowed in a switch statement.
PARSER-12 = Case statement required first in a switch.
PARSER-13 = Assignment not allowed.
PARSER-14 = Either all clauses are conditional (":"), or none are.
PARSER-15 = Either all dimensions have values, or none may.
PARSER-16 = Unexpected token: {0}. (Expected an EOF.)
PARSER-17 = Expected to find a type declaration.
PARSER-18 = No statements allowed outside of module declaration.
PARSER-19 = Repeated modifier: \"{0}\".
PARSER-20 = Conflicting modifiers: \"{0}\", \"{1}\".

LEXER-03  = Invalid character:
LEXER-04  = Illegal number:

COMPILER-01 = Unknown fatal compiler error.
COMPILER-02 = Cannot nest a module.
COMPILER-03 = Package cannot be nested under \"{0}\".
COMPILER-04 = Class cannot be nested under \"{0}\".
COMPILER-05 = Property \"{0}\" is a duplicate.
COMPILER-06 = Property \"{0}\" cannot be nested under \"{1}\".
COMPILER-07 = Illegal module name.
COMPILER-08 = Duplicate modifier.
COMPILER-09 = Illegal modifier.
COMPILER-10 = Conflicting modifier.
COMPILER-11 = More than one "extends" clause.
COMPILER-12 = Illegal / unexpected type parameters.
COMPILER-13 = Illegal / unexpected constructor parameters.
COMPILER-14 = Illegal / unexpected constructor parameters.
COMPILER-15 = Unexpected keyword.
COMPILER-16 = Inner const class must be declared static if its outer class is not a const.
COMPILER-17 = Inner service class must be declared static if its outer class is not a const or service.
COMPILER-18 = Wrong number of type parameter values.
COMPILER-19 = Type parameter name is a duplicate.
COMPILER-20 = More than one "import" clause.
COMPILER-21 = More than one "into" clause.
COMPILER-22 = Package cannot have both body and "import" clause.
COMPILER-23 = A conditional is not allowed on this structure.
COMPILER-24 = Cannot find a module.
COMPILER-25 = Conflicting version clauses.
COMPILER-26 = An import of the primary module cannot specify import modifiers or versions.
COMPILER-27 = Illegal link-time conditional expression.
COMPILER-28 = Duplicate import with the same alias: \"{0}\".
COMPILER-29 = Import cannot be conditional; condition ignored.
COMPILER-30 = Unresolvable name: \"{0}\".
COMPILER-31 = Name collision: \"{0}\".
COMPILER-32 = Class type required.
COMPILER-33 = Method \"{0}\" cannot be nested under \"{1}\".
COMPILER-34 = Typedef \"{0}\" cannot be nested under \"{1}\".
COMPILER-35 = Annotation cannot occur here.
COMPILER-36 = Could not find name \"{0}\" within \"{1}\".
COMPILER-37 = Name \"{0}\" is ambiguous.
COMPILER-38 = Name \"{0}\" is unresolvable.
COMPILER-39 = Name \"{0}\" is unhideable; attempt to hide \"{1}\" is an error.
COMPILER-40 = Return is supposed to be void.
COMPILER-41 = Return is supposed to be non-void.
COMPILER-42 = Return has the wrong number of arguments: {0} expected, {1} found.
COMPILER-43 = Type mismatch: {0} expected, {1} found.
COMPILER-44 = Wrong number of values: {0} expected, {1} found.
COMPILER-45 = Value of type {0} is out of range: {1}.
COMPILER-46 = Statement is not reachable.
COMPILER-47 = Expression does not evaluate to a constant value.
COMPILER-48 = A value is required.
COMPILER-49 = A return is required.
COMPILER-50 = Invalid operation.
COMPILER-51 = Variable {0} is already defined.
COMPILER-52 = No reference to "{0}" is available.

VERIFY-01 = Unknown fatal parser error: \"{0}\".
VERIFY-02 = \"{0}\" does not have type parameters, but type parameters were provided.
VERIFY-03 = \"{0}\" requires \"{1}\" type parameters, but \"{2}\" type parameters were provided.
VERIFY-04 = \"{0}\" type parameter \"{1}\" must be of type \"{2}\", but has been overridden as \"{3}\" by {4}.
VERIFY-05 = \"{0}\" type parameter \"{1}\" must be of type \"{2}\", but has been specified as \"{3}\" by {4}.
VERIFY-06 = \"{0}\" type parameter \"{1}\" is specified as two different types (\"{2}\" and \"{3}\") by {4}.
VERIFY-07 = \"{0}\" is annotated by type \"{1}\", but it is not an explicit class identity.
VERIFY-08 = Unexpected "extends" \"{0}\" on \"{1}\"; an "extends" specifier cannot occur on interfaces (or on the root Object), there must be only one, and it must occur first (after any annotations, and after the "into" for a mixin).
VERIFY-09 = \"{0}\" is missing "extends".
VERIFY-10 = \"{0}\" "extends" \"{1}\", but it is not an explicit class identity.
VERIFY-11 = \"{0}\" is part of a cyclical "extends" loop.
VERIFY-12 = \"{0}\" mixes into \"{1}\", but is extended by \"{2}\" that mixes into the incompatible type \"{3}\".
VERIFY-13 = Unexpected annotation \"{0}\" on \"{1}\"; annotations can only appear in the beginning of the contribution list.
VERIFY-14 = Unexpected "into" \"{0}\" on \"{1}\"; an "into" specifier can only occur on a mixin, there must be only one, and it must occur first (after any annotations).
VERIFY-15 = Unexpected "incorporates" \"{0}\" on \"{1}\"; an "incorporates" specifier cannot occur on an interface.
VERIFY-16 = \"{0}\" is incorporated by type \"{1}\", but it is not an explicit class identity.
VERIFY-17 = \"{0}\" is incorporated by type \"{1}\", but it is not a mixin.
VERIFY-18 = \"{0}\" incorporates \"{1}\", but \"{2}\" is not compatible with the "into" specifier: \"{3}\".
VERIFY-19 = \"{0}\" is delegated by type \"{1}\", but it is not an interface type.
VERIFY-20 = \"{0}\" is implemented by type \"{1}\", but it is not an interface type.
VERIFY-21 = Unexpected "delegates" \"{0}\" on \"{1}\"; a "delegates" specifier cannot occur on an interface.
VERIFY-22 = Unexpected formal type name \"{0}\" encountered while resolving \"{1}\".
VERIFY-23 = \"{0}\", which is a \"{1}\", illegally extends \"{2}\", which is a \"{3}\".
VERIFY-24 = Service type \"{0}\" cannot be treated as an immutable type.
VERIFY-25 = Redundant immutable type specification.
VERIFY-26 = Type \"{0}\" cannot be annotated because it does not specify a class or interface.
VERIFY-27 = \"{0}\" is not a mixin, and thus cannot be used in an annotation.
VERIFY-28 = The annotation \"@{0}\" can only occur once.
VERIFY-29 = Type \"{0}\" cannot have accessibility defined because it does not specify a class or interface.
VERIFY-30 = \"{0}\" is extended by mixin type \"{1}\", but it is not a mixin.
VERIFY-31 = \"{0}\" is not a type that can be parameterized.
VERIFY-32 = \"{0}\" is annotated by \"{1}\", but is not compatible with the required \"into\": \"{2}\".
VERIFY-33 = \"{0}\" type parameter \"{1}\" is of type \"{2}\", which conflicts with the type parameter contribution from \"{3}\" of type \"{4}\".
VERIFY-34 = \"{0}\" type parameter \"{1}\" is not specified, which conflicts with the type parameter contribution from \"{2}\" of type \"{3}\".
VERIFY-35 = \"{0}\" type parameter \"{1}\" is of type \"{2}\", which conflicts with the type parameter contribution from \"{3}\" of the unspecified type.
VERIFY-36 = \"{0}\" contains a property \"{1}\" which collides with a type parameter of the same name.
VERIFY-37 = \"{0}\" missing a property \"{1}\" for the type parameter of the same name.
VERIFY-38 = \"{0}\" has a misconfigured property \"{1}\" for the type parameter of the same name.
